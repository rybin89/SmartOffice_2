# Form implementation generated from reading ui file '.\Views\cabinetTest.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets

from Controllers.Cabinet_Controller import Cabinet_Controller


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1008, 739)
        MainWindow.setStyleSheet("background-color: rgb(0, 0, 255);")

        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

#         self.HeaderWindow = QtWidgets.QLabel(parent=self.centralwidget)
#         self.HeaderWindow.setGeometry(QtCore.QRect(40, 30, 351, 71))
#         self.HeaderWindow.setStyleSheet("font: 24pt \"MS Shell Dlg 2\";\n"
# "color: rgb(255, 255, 255);\n"
# "background-color: rgb(0, 170, 255);\n"
# "border-radius:10px;\n"
# "padding:15px;")
#         self.HeaderWindow.setObjectName("HeaderWindow")

        self.cabinetButton = QtWidgets.QToolButton(parent=self.centralwidget)
        self.cabinetButton.setGeometry(QtCore.QRect(50, 630, 251, 71))
        self.cabinetButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:10px;\n"
"font: 20pt \"MS Shell Dlg 2\";")
        self.cabinetButton.setObjectName("cabinetButton")
        self.informationCabinet = QtWidgets.QLabel(parent=self.centralwidget)
        self.informationCabinet.setGeometry(QtCore.QRect(410, 630, 471, 61))
        self.informationCabinet.setStyleSheet("font: 20pt \"MS Shell Dlg 2\";\n"
"color: rgb(255, 255, 255);")
        self.informationCabinet.setObjectName("informationCabinet")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.show_cabinets()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        # self.HeaderWindow.setText(_translate("MainWindow", "Кабинетыйцйцуйцу"))
        self.cabinetButton.setText(_translate("MainWindow", "Кабинет"))
        self.informationCabinet.setText(_translate("MainWindow", "Информация о кабинете"))

    def show_cabinets(self):
        cabinet = Cabinet_Controller()
        label_y = 30
        for row in cabinet.get():
            self.HeaderWindow = QtWidgets.QLabel(parent=self.centralwidget)
            self.HeaderWindow.setGeometry(QtCore.QRect(40, label_y, 351, 71))
            self.HeaderWindow.setStyleSheet("font: 24pt \"MS Shell Dlg 2\";\n"
                                            "color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(0, 170, 255);\n"
                                            "border-radius:10px;\n"
                                            "padding:15px;")
            self.HeaderWindow.setObjectName("HeaderWindow")
            label_y +=90
            self.HeaderWindow.setText(row.name)
    def show_departament(self):
        cabinet = Cabinet_Controller()
        l_y = 30
        for row in cabinet.get():
            self.HeaderWindow_1 = QtWidgets.QLabel(parent=self.centralwidget)
            self.HeaderWindow_1.setGeometry(QtCore.QRect(420,l_y,351,71))
            self.HeaderWindow_1.setStyleSheet("font: 24pt \"MS Shell Dlg 2\";\n"
                                            "color: rgb(255, 255, 255);\n"
                                            "background-color: rgb(0, 170, 255);\n"
                                            "border-radius:10px;\n"
                                            "padding:15px;")
            self.HeaderWindow_1.setObjectName("HeaderWindow_1")
            l_y += 90
            self.HeaderWindow_1.setText(row.department)


if __name__ == "__main__":
    import sys

    # Back up the reference to the exceptionhook
    sys._excepthook = sys.excepthook


    def my_exception_hook(exctype, value, traceback):
        # Print the error and traceback
        print(exctype, value, traceback)
        # Call the normal Exception hook after
        sys._excepthook(exctype, value, traceback)
        sys.exit(1)


    # Set the exception hook to our wrapping function
    sys.excepthook = my_exception_hook

    app = QtWidgets.QApplication(sys.argv)

    MainWindow = QtWidgets.QMainWindow()

    ui = Ui_MainWindow()
    cabinet = Cabinet_Controller()

    ui.setupUi(MainWindow)


    ui.show_departament()
    # Функция, которя выполняет действия при нажатии кнопки
    def on_click():
        print('Я нажал кнопку!')

    def change_text():

        ui.informationCabinet.setText(str(cabinet.count_row()))
        # print(type(str))


    try:
        sys.exit(app.exec_())

    except:
        ui.cabinetButton.clicked.connect(change_text)
        print("Exiting")


    MainWindow.show()
    sys.exit(app.exec())
